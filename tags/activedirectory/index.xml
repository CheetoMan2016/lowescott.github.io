<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scott&#39;s Weblog </title>
    <link>http://lowescott.github.io/tags/activedirectory/index.xml/</link>
    <language>en-us</language>
    <author>Scott Lowe</author>
    <rights>(C) 2005</rights>
    <updated>2005-12-22 11:26:46 &#43;0000 &#43;0000</updated>

    
      
        <item>
          <title>Complete Linux-AD Authentication Details</title>
          <link>http://lowescott.github.io/2005/12/22/complete-linux-ad-authentication-details/</link>
          <pubDate>Thu, 22 Dec 2005 11:26:46 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/12/22/complete-linux-ad-authentication-details/</guid>
          <description>

&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; These instructions are for Windows 2000 Server and Windows Server 2003 pre-R2. For the R2 release, please see &lt;a href=&#34;http://blog.scottlowe.org/2007/01/15/linux-ad-integration-version-4/&#34;&gt;these updated instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are several articles posted here that discuss, in general terms, how to authenticate Linux against Active Directory. For example, see this brief article on the &lt;a href=&#34;http://blog.scottlowe.org/2005/07/13/linux-ad-integration-direction/&#34;&gt;broad direction&lt;/a&gt; of the integration, or this posting on &lt;a href=&#34;http://blog.scottlowe.org/2005/07/18/minor-linux-ad-hiccup-fixed-hopefully/&#34;&gt;using computer accounts&lt;/a&gt; for Linux servers (most how-to documents I&amp;rsquo;ve seen discuss the use of a user account for this purpose).&lt;/p&gt;

&lt;p&gt;Over the last week or so, I&amp;rsquo;ve been having to rebuild one Linux server a number of times in an effort to fix a separate problem (see this article on &lt;a href=&#34;http://blog.scottlowe.org/2005/08/16/strange-ntpd-problem-on-centos-41/&#34;&gt;NTPd problems with CentOS 4.1&lt;/a&gt; and the &lt;a href=&#34;http://blog.scottlowe.org/2005/12/19/ntpd-on-centos-42/&#34;&gt;recurrence of the problem&lt;/a&gt; with CentOS 4.2). As a result, I&amp;rsquo;ve had to go through the process of configuring this Linux server (and preparing Active Directory) for authentication several times, and I found that I kept having to go back to my scattered and dispersed notes to remember what had to be done. In the hopes of correcting that, I am collecting all the pertinent information I have here in this article.&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Preparing Active Directory (One-Time)&lt;/h3&gt;

&lt;p&gt;There is a one-time preparation of Active Directory that is required. In order to authenticate Linux logins against Active Directory, Active Directory&amp;rsquo;s schema must be extended to include Linux-specific attributes such as home directory, UID, GID, and default shell. There are a couple of different ways to do this; I chose to use Microsoft&amp;rsquo;s Services for Unix (SFU) to extend the schema. There are two reasons I chose SFU: 1) it&amp;rsquo;s free; and 2) the SFU schema is being included by default in Windows Server 2003 R2.&lt;/p&gt;

&lt;p&gt;Once SFU has been installed and the schema has been extended, then the specific Active Directory accounts that are allowed to authenticate via Linux must be configured with a UID and other UNIX attributes. This is accomplished via the new &amp;ldquo;UNIX Attributes&amp;rdquo; tab on the properties dialog box of a user account.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll also need to create an account in Active Directory that will be used to bind to Active Directory for LDAP queries. This account does &lt;em&gt;not&lt;/em&gt; need any special privileges; in fact, making the account a member of Domain Guests and &lt;em&gt;not&lt;/em&gt; a member of Domain Users is perfectly fine.&lt;/p&gt;

&lt;p&gt;After all the user accounts have been configured, then we are ready to perform the additional tasks within Active Directory and on the Linux server that will enable the authentication.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Preparing Active Directory (Each Server)&lt;/h3&gt;

&lt;p&gt;For each server that will be authenticating against Active Directory, follow the steps below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a computer account in Active Directory. When creating the computer account, be sure to specify that this account may be used by a pre-Windows 2000-based computer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Use the following command at a command prompt to configure the new computer account:&lt;/p&gt;

&lt;p&gt;ktpass -princ host/fqdn@REALM -mapuser DOMAIN\name$&lt;br /&gt;
-crypto DES-CBC-MD5 -pass password -ptype KRB5_NT_PRINCIPAL&lt;br /&gt;
-out filename&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Of course, you&amp;rsquo;ll need to substitute the appropriate values for &amp;ldquo;fqdn&amp;rdquo; (the fully-qualified domain name of the computer), &amp;ldquo;REALM&amp;rdquo; (the DNS name of your Active Directory domain in UPPERCASE), &amp;ldquo;DOMAIN&amp;rdquo; (the NetBIOS name of your Active Directory domain), &amp;ldquo;password&amp;rdquo; (the password that will be set for the new computer account), and &amp;ldquo;filename&amp;rdquo; (the keytab that will be generated and must be copied over to the Linux computer).&lt;/p&gt;

&lt;p&gt;If you need to rebuild the Linux server for whatever reason, you&amp;rsquo;ll need to delete the computer account you created and repeat this process.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Preparing the Linux Server&lt;/h3&gt;

&lt;p&gt;Follow the steps below to configure the Linux server for authentication against Active Directory.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Make sure that the appropriate Kerberos libraries, OpenLDAP, pam_krb5, and nss_ldap are installed. If they are not installed, install them.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Be sure that time is being properly synchronized between Active Directory and the Linux server in question. Kerberos requires time synchronization.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit the &lt;code&gt;krb5.conf&lt;/code&gt; file to look something like this, substituting your actual host names and domain names where appropriate:&lt;/p&gt;

&lt;p&gt;[logging]&lt;br /&gt;
 default = FILE:/var/log/krb5libs.log&lt;br /&gt;
 kdc = FILE:/var/log/krb5kdc.log&lt;br /&gt;
 admin_server = FILE:/var/log/kadmind.log&lt;/p&gt;

&lt;p&gt;[libdefaults]&lt;br /&gt;
 default_realm = EXAMPLE.COM&lt;br /&gt;
 dns_lookup_realm = true&lt;br /&gt;
 dns_lookup_kdc = true&lt;/p&gt;

&lt;p&gt;[realms]&lt;br /&gt;
 EXAMPLE.COM = {&lt;br /&gt;
  kdc = host.example.com:88&lt;br /&gt;
  admin_server = host.example.com:749&lt;br /&gt;
  default_domain = example.com&lt;br /&gt;
 }&lt;/p&gt;

&lt;p&gt;[domain_realm]&lt;br /&gt;
 .example.com = EXAMPLE.COM&lt;br /&gt;
 example.com = EXAMPLE.COM&lt;/p&gt;

&lt;p&gt;[kdc]&lt;br /&gt;
 profile = /var/kerberos/krb5kdc/kdc.conf&lt;/p&gt;

&lt;p&gt;[appdefaults]&lt;br /&gt;
 pam = {&lt;br /&gt;
   debug = false&lt;br /&gt;
   ticket_lifetime = 36000&lt;br /&gt;
   renew_lifetime = 36000&lt;br /&gt;
   forwardable = true&lt;br /&gt;
   krb4_convert = false&lt;br /&gt;
 }&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit the &lt;code&gt;/etc/ldap.conf&lt;/code&gt; file to look something like this, substituting the appropriate host names, domain names, account names, and distinguished names (DNs) where appropriate.&lt;/p&gt;

&lt;p&gt;host 10.10.10.10
base dc=example,dc=com
binddn cn=ldap,cn=Users,dc=example,dc=com
bindpw adldapbindpw
scope sub
ssl no
nss_base_passwd dc=example,dc=com
nss_base_shadow dc=example,dc=com
nss_base_group dc=example,dc=com
nss_map_objectclass posixAccount user
nss_map_objectclass shadowAccount user
nss_map_objectclass posixGroup group
nss_map_attribute uid sAMAccountName
nss_map_attribute uidNumber msSFU30UidNumber
nss_map_attribute gidNumber msSFU30GidNumber
nss_map_attribute loginShell msSFU30LoginShell
nss_map_attribute gecos name
nss_map_attribute userPassword msSFU30Password
nss_map_attribute homeDirectory msSFU30HomeDirectory
nss_map_attribute uniqueMember msSFU30PosixMember
nss_map_attribute cn cn&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Securely copy the file created using the &lt;code&gt;ktpass.exe&lt;/code&gt; utility above to the Linux server in question, placing it in the &lt;code&gt;/etc&lt;/code&gt; directory as &lt;code&gt;krb5.keytab&lt;/code&gt;. (SFTP or SCP are excellent candidates for this.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Configure PAM (this varies according to Linux distributions) to use pam_krb5 for authentication. Many modern distributions use a stacking mechanism whereby one file can be modified and those changes will applied to all the various PAM-aware services. For example, in Red Hat-based distributions, the system-auth file is referenced by most other PAM-aware services.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit the &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; file to include &amp;ldquo;ldap&amp;rdquo; as a lookup source for passwd, shadow, and groups.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That should be it. Once you do that, you should be able to use &lt;code&gt;kinit&lt;/code&gt; from a Linux shell prompt (for example, &lt;code&gt;kinit aduser&lt;/code&gt;) and generate a valid Kerberos ticket for the specified Active Directory account.&lt;/p&gt;

&lt;p&gt;At this point, any PAM-aware service that is configured to use the stacked system file (such as the system-auth configuration on Red Hat-based distributions) will use Active Directory for authentication. Note, however, that unless you also add the &lt;code&gt;pam_mkhomedir.so&lt;/code&gt; module in the PAM configuration, home directories will have to be created manually for any Active Directory account that may log on to that server. (I generally recommend the use of &lt;code&gt;pam_mkhomedir.so&lt;/code&gt; in this situation.)&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Mass Password Changes in Active Directory</title>
          <link>http://lowescott.github.io/2005/12/08/mass-password-changes-in-active-directory/</link>
          <pubDate>Thu, 08 Dec 2005 22:16:58 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/12/08/mass-password-changes-in-active-directory/</guid>
          <description>&lt;p&gt;Earlier this year, I had a need in a project to set the password for a large number of Active Directory accounts simultaneously. Here&amp;rsquo;s the solution I came up with for this particular need.&lt;/p&gt;

&lt;p&gt;To use this technique, you&amp;rsquo;ll need &lt;code&gt;ldifde&lt;/code&gt; (included with &lt;a href=&#34;http://www.microsoft.com/windowsserver2003/default.mspx&#34;&gt;Windows Server 2003&lt;/a&gt;), &lt;code&gt;grep&lt;/code&gt; (included with &lt;a href=&#34;http://www.apple.com/macosx/&#34;&gt;Mac OS X&lt;/a&gt; and most Linux distributions; Win32 versions available on the Internet), a text editor with search and replace functionality (advanced geeks are free to use &lt;code&gt;sed&lt;/code&gt;), and &lt;code&gt;dsmod&lt;/code&gt; (from the &lt;em&gt;Windows Server 2003 Resource Kit&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;First, export the list of user accounts out of Active Directory using ldifde. The command will look something like this (I&amp;rsquo;ve line wrapped here, as indicated by a backslash, but this should all be on one line):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ldifde -d &amp;quot;CN=Users,DC=company,DC=com&amp;quot; -r &amp;quot;(objectclass=user)&amp;quot; \  
-f c:\export-1.ldif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates a file called &amp;ldquo;export-1.ldif&amp;rdquo;. Using &lt;code&gt;grep&lt;/code&gt;, filter this file down to only the full distinguished names of the users:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;less export-1.ldif | grep &#39;dn: &#39; &amp;gt; export-2.ldif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that you&amp;rsquo;ll need to use &lt;code&gt;type&lt;/code&gt; instead of &lt;code&gt;less&lt;/code&gt; on a Win32 system. Also, on a Win32 system you&amp;rsquo;ll need to use double quotes instead of single quotes in the &lt;code&gt;grep&lt;/code&gt; command. This creates a file called &amp;ldquo;export-2.ldif&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Load this file into the text editor and make the following changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Remove all occurrences of &amp;ldquo;dn: &amp;ldquo; (there is a space after the colon)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add a double quotation mark before CN= at the start of each line&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add a double quotation mark after =com at the end of each line&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save this modified file as &amp;ldquo;export-3.ldif&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Finally, pipe this file through to the &lt;code&gt;dsmod&lt;/code&gt; program to set passwords for all the users in the file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type export-3.ldif | dsmod user -pwd newpass1 -mustchpwd yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Full help for the dsmod command line syntax is available using &lt;code&gt;dsmod /?&lt;/code&gt; or &lt;code&gt;dsmod user /?&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can add &lt;code&gt;&amp;gt; filename&lt;/code&gt; to the end of the above command to log the output of the &lt;code&gt;dsmod&lt;/code&gt; command to a file. You can then use &lt;code&gt;grep&lt;/code&gt; to parse this file to ensure that the command was successful for all users.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>WatchGuard Firebox VPN and Active Directory Integration</title>
          <link>http://lowescott.github.io/2005/12/06/watchguard-firebox-vpn-and-active-directory-integration/</link>
          <pubDate>Tue, 06 Dec 2005 17:38:24 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/12/06/watchguard-firebox-vpn-and-active-directory-integration/</guid>
          <description>

&lt;p&gt;A short while back, I posted an article on &lt;a href=&#34;http://blog.scottlowe.org/2005/11/22/cisco-pix-vpn-and-active-directory-integration/&#34;&gt;Cisco PIX VPN and Active Directory integration&lt;/a&gt;. Now, I&amp;rsquo;d like to follow that article up with a version looking at integration between Active Directory and &lt;a href=&#34;http://www.watchguard.com/&#34;&gt;WatchGuard&lt;/a&gt; Firebox VPNs.&lt;/p&gt;

&lt;p&gt;As with the PIX-AD integration document, this article assumes that you have some basic knowledge of how to work with the WatchGuard Firebox series of firewalls. This article was written using version 6.2 of the WatchGuard Firebox System software and Windows Server 2003; other versions of either the firewall software or Windows should be similar.&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Configuring the Firebox&lt;/h3&gt;

&lt;p&gt;First, we&amp;rsquo;ll need to setup the Firebox. Use the Firebox software (Policy Manager, specifically) to perform the following configuration tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Add the server that is running IAS (or will be running IAS; see below) as a RADIUS server in the Authentication Servers dialog box (found on the Setup menu). Here, you&amp;rsquo;ll need to specify the server&amp;rsquo;s IP address, port number (the default of 1645 will be fine), and the shared secret.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Instruct the firewall to use RADIUS by going to Setup &amp;gt; Firewall Authentication and selecting &amp;ldquo;RADIUS&amp;rdquo; as the authentication type.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Configure the firewall&amp;rsquo;s Remote User VPN (on the Network menu) to use RADIUS by checking the &amp;ldquo;Use RADIUS to authenticate remote users&amp;rdquo; check box.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once this is done, proceed with configuring PPTP-based remote user VPNs as usual. Be sure to add a rule allowing traffic to/from the pptp_users group; otherwise, VPN users will be subject to the same traffic restrictions as Internet users.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Configuring Internet Authentication Service&lt;/h3&gt;

&lt;p&gt;Before doing anything else, create a new global security group in Active Directory. Call it &amp;ldquo;pptp_users&amp;rdquo;, just like the name of the group on the Firebox. This is an important part of the glue that will bind the Firebox together with Active Directory.&lt;/p&gt;

&lt;p&gt;If IAS is not already installed, install IAS using the Add/Remove Programs icon in Control Panel.&lt;/p&gt;

&lt;p&gt;Once it has been installed, launch it from the Administrative Tools folder on the Start Menu and we&amp;rsquo;ll proceed with configuring it for authenticating VPN connections to the Firebox.&lt;/p&gt;

&lt;p&gt;First, we need to grant IAS permission to read dial-in properties from user accounts in Active Directory. To do this, right-click on the &amp;ldquo;Internet Authentication Service (Local)&amp;rdquo; and select &amp;ldquo;Register Server in Active Directory&amp;rdquo;. Select Yes (or OK) if prompted to confirm. Note that if IAS was already installed, it may have already been registered with Active Directory as well.&lt;/p&gt;

&lt;p&gt;With that done, we can now configure the Firebox as a RADIUS client. Right-click on RADIUS Clients and select New RADIUS Client. In the wizard, specify the IP address (or DNS name) of the Firebox&amp;rsquo;s trusted interface and the shared secret. Note that this shared secret is the same secret key specified when configuring the RADIUS server in the Firebox previously. RADIUS clients use this to authenticate to RADIUS servers, so make it a reasonably strong password.&lt;/p&gt;

&lt;p&gt;Now create a new remote access policy. Right-click on Remote Access Policies and select New Remote Access Policy. In the wizard, specify a name, select to create a custom policy, and then add the following conditions to the policy:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NAS-IP-Address: This will be the IP address of the Firebox&amp;rsquo;s trusted interface. This helps to ensure that this policy only applies to VPN requests from this firewall and not from any other RADIUS client.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Windows-Groups: This should be the &amp;ldquo;pptp_users&amp;rdquo; security group created earlier. Any user that should be allowed to authenticate on a VPN connection will need to be a member of this group.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, this policy should grant access. On the next screen, select &amp;ldquo;Edit Profile&amp;rdquo; to edit the remote access profile. This is important because we&amp;rsquo;ll need to verify that the RADIUS server is passing the correct information to the Firebox.&lt;/p&gt;

&lt;p&gt;On the Advanced tab, remove all the attributes listed there (Service-Type and Framed-Protocol are there by default) and then add the Filter-Id attribute. To this attribute, add the string value &amp;ldquo;pptp_users&amp;rdquo;. Click OK to save these changes to the profile and then finish creating the policy.&lt;/p&gt;

&lt;p&gt;Make this policy the first policy (using the Move Up/Move Down commands in the IAS console), add a user to the group created earlier, and then test your connection. Remote systems attempting to connect via PPTP should now be able to authenticate the VPN connection using their Active Directory usernames and passwords.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; I&amp;rsquo;ve updated this entry to correct some errors pointed out in the comments. Thanks for the feedback!&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Cisco PIX VPN and Active Directory Integration</title>
          <link>http://lowescott.github.io/2005/11/22/cisco-pix-vpn-and-active-directory-integration/</link>
          <pubDate>Tue, 22 Nov 2005 19:01:54 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/11/22/cisco-pix-vpn-and-active-directory-integration/</guid>
          <description>

&lt;p&gt;Rather than publishing this information in PDF form on my business website, I&amp;rsquo;ve decided to try something new and post it here as a blog entry. So, here goes.&lt;/p&gt;

&lt;p&gt;This information assumes that you have some experience with the Cisco PIX firewall (i.e., you know how to enter configuration commands and have a basic idea of what the configuration commands actually do) as well as some experience with Windows and Active Directory.&lt;/p&gt;

&lt;p&gt;With that information in hand, let&amp;rsquo;s get started.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Configuring the Cisco PIX&lt;/h2&gt;

&lt;p&gt;First, we&amp;rsquo;ll need to setup the PIX firewall. Use the commands below to configure the PIX for PPTP-based VPN connections that will authenticate against an Active Directory back-end.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip local pool vpn-pool 10.10.10.1-10.10.10.254  
aaa-server vpn-auth inside host 10.10.10.5 secretkey  
aaa-server vpn-auth inside host 10.10.10.6 secretkey  
aaa-server vpn-auth protocol radius  
vpdn group vpn-pptp-group accept dialin pptp  
vpdn group vpn-pptp-group ppp authentication mschap  
vpdn group vpn-pptp-group ppp encryption mppe 128 required  
vpdn group vpn-pptp-group client configuration \  
address local vpn-pool  
vpdn group vpn-pptp-group client configuration \  
dns 10.10.10.5 10.10.10.6  
vpdn group vpn-pptp-group client configuration \  
wins 10.10.10.6 10.10.10.5  
vpdn group vpn-pptp-group client authentication aaa vpn-auth  
vpdn enable outside  
sysopt connect permit-pptp  
access-list acl-nat0 permit ip 10.10.1.0 255.255.255.0 \  
10.10.10.0 255.255.255.0  
nat (inside) 0 access-list acl-nat0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(Note that I have placed a backslash to indicate text that is wrapped onto two lines here but should be entered all on a single line in the PIX configuration.)&lt;/p&gt;

&lt;p&gt;In this configuration, replace the IP addresses on lines 2 and 3 (the &lt;code&gt;aaa-server vpn-auth&lt;/code&gt; commands) with the IP addresses of the servers running Internet Authentication Service (IAS) on Windows. See the next section for more information on configuring IAS.&lt;/p&gt;

&lt;p&gt;On those same lines, replace the text &lt;code&gt;secretkey&lt;/code&gt; with the RADIUS shared secret that will be used when configuring the RADIUS/IAS server in the next section.&lt;/p&gt;

&lt;p&gt;Likewise, replace the IP addresses on lines 9 and 10 (the &lt;code&gt;vdpn group vpn-pptp-group client configuration&lt;/code&gt; lines that pass out the DNS and WINS servers to VPN clients) with the IP addresses of your DNS and WINS servers, respectively.&lt;/p&gt;

&lt;p&gt;That should do it. Save the configuration to the PIX and then move on to configuring IAS.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Configuring Internet Authentication Service&lt;/h2&gt;

&lt;p&gt;Before doing anything else, create a new global security group in Active Directory. Call it something like &amp;ldquo;VPN Users&amp;rdquo; or similar. We&amp;rsquo;ll use this group later as an additional security check in validating VPN connections.&lt;/p&gt;

&lt;p&gt;Next, install IAS using the Add/Remove Programs icon in Control Panel. Once it has been installed, launch it from the Administrative Tools folder on the Start Menu and we&amp;rsquo;ll proceed with configuring it for authenticating VPN connections to the PIX firewall.&lt;/p&gt;

&lt;p&gt;First, we need to grant IAS permission to read dial-in properties from user accounts in Active Directory. To do this, right-click on the &amp;ldquo;Internet Authentication Service (Local)&amp;rdquo; and select &amp;ldquo;Register Server in Active Directory&amp;rdquo;. Select Yes (or OK) if prompted to confirm.&lt;/p&gt;

&lt;p&gt;With that done, we can now configure the PIX firewall as a RADIUS client. Right-click on RADIUS Clients and select New RADIUS Client. In the wizard, specify the IP address (or DNS name) of the PIX firewall&amp;rsquo;s internal IP address and the shared secret. Note that this shared secret is the same secret key specified in the PIX configuration above. RADIUS clients use this to authenticate to RADIUS servers, so make it a reasonably strong password.&lt;/p&gt;

&lt;p&gt;Now create a remote access policy. Right-click on Remote Access Policies and select New Remote Access Policy. In the wizard, specify a name, select to create a custom policy, and then add the following conditions to the policy:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NAS-IP-Address: This will be the IP address of the PIX firewall&amp;rsquo;s internal interface. This helps to ensure that this policy only applies to VPN requests from this firewall and not from any other RADIUS client.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Windows-Groups: This should be the security group created earlier. Any user that should be allowed to authenticate on a VPN connection will need to be a member of this group.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rest of the policy should be very straightforward. Make this policy the first policy (using the Move Up/Move Down commands in the IAS console), add a user to the group created earlier, and then test your connection. Remote systems attempting to connect via PPTP should now be able to authenticate the VPN connection using their Active Directory usernames and passwords.&lt;/p&gt;

&lt;p&gt;Although this was written from the perspective of authenticating PPTP connections, the process should be very similar for IPSec VPN clients as well.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Error ID c10308a2 is Put to Rest</title>
          <link>http://lowescott.github.io/2005/09/26/error-id-c10308a2-is-put-to-rest/</link>
          <pubDate>Mon, 26 Sep 2005 13:45:18 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/09/26/error-id-c10308a2-is-put-to-rest/</guid>
          <description>&lt;p&gt;As you may already know, I&amp;rsquo;ve been struggling with a bug in an environment running Exchange Server 2003 and Windows Server 2003 with SP1. The bug is manifested as an error that appears when users with the properly delegated permissions attempt to add or modify an e-mail address on an already mail-enabled or mailbox-enabled object. The error, listed as error ID c10308a2, contains text along the lines of being unable to determine if the Microsoft Exchange System Attendant service is running.&lt;/p&gt;

&lt;p&gt;The underlying issue is a change that Windows Server 2003 SP1 makes to the security descriptors applied to the Service Control Manager. This change in security descriptors now makes it impossible for non-administrators to query service status; hence, the error message.&lt;/p&gt;

&lt;p&gt;In trying to apply the fix suggested by Microsoft in KB905809 (the use of the SC.EXE command), the error was never resolved. It turns out that the workstation I was using the test environment was configured not to use the primary DNS suffix, but instead use a predetermined DNS suffix search list. This configuration resulted in the system&amp;rsquo;s AD domain name &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; being in the suffix search list. As a result, even though the fix from Microsoft was applied, errors still occurred.&lt;/p&gt;

&lt;p&gt;This morning I double-checked everything on the test servers as well as the test workstations, corrected the problem described above, and reset the environment to match the production environment. Then, walking through the tests again, I confirmed that running the SC command to add permissions to the Authenticated Users group (see the KB article linked above for more details, then see &lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthz/security/security_descriptor_string_format.asp&#34;&gt;this explanation&lt;/a&gt; of SDDL syntax) &lt;strong&gt;&lt;em&gt;does&lt;/em&gt;&lt;/strong&gt; indeed resolve the issue.&lt;/p&gt;

&lt;p&gt;So, finally, we can put this issue to rest. If you are running Exchange Server 2003 with Windows Server 2003 SP1 and finding that your non-administrative users can&amp;rsquo;t add or modify e-mail addresses using Active Directory Users &amp;amp; Computers, see KB905809 and run the SC command listed in there.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Have You Seen Error ID c10308a2?</title>
          <link>http://lowescott.github.io/2005/09/22/have-you-seen-error-id-c10308a2/</link>
          <pubDate>Thu, 22 Sep 2005 17:52:13 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/09/22/have-you-seen-error-id-c10308a2/</guid>
          <description>&lt;p&gt;As the next-to-last article in a series of postings about the problem described in this &lt;a href=&#34;http://support.microsoft.com/default.aspx?scid=kb;en-us;905809&#34;&gt;KB article&lt;/a&gt;, it appears that Microsoft will not be producing a hotfix for this bug. In speaking with Microsoft earlier today, it appears that no hotfix will be produced for this, even though it is a confirmed bug. As of this afternoon, the only known fix for the problem is using &lt;strong&gt;both&lt;/strong&gt; methods outlined in the KB article. I hope to confirm that for sure on Monday.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m also going to confirm on Monday whether membership in the local Administrators group (on the actual Exchange servers) will also fix the issue.&lt;/p&gt;

&lt;p&gt;The next posting about this problem will be the last one regarding this issue. Really.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Funky Active Directory Issue</title>
          <link>http://lowescott.github.io/2005/08/16/funky-active-directory-issue/</link>
          <pubDate>Tue, 16 Aug 2005 23:17:43 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/08/16/funky-active-directory-issue/</guid>
          <description>&lt;p&gt;I came across a funky Active Directory issue today. User objects stored in an OU on which permissions had been assigned were &amp;ldquo;losing&amp;rdquo; their permissions and their inheritance from the parent OU. For example, if the group &amp;ldquo;Support Team&amp;rdquo; had been granted a set of permissions on the OU &amp;ldquo;Sales&amp;rdquo;, then the user object &amp;ldquo;Bob Jones&amp;rdquo; stored in that OU would lose those permissions regularly. Even when the permissions were reassigned, they would disappear again.&lt;/p&gt;

&lt;p&gt;It turns out that if the user object is a member, directly or indirectly, of a &amp;ldquo;protected group&amp;rdquo; (such as Server Operators, Backup Operators, or Administrators), then Active Directory automatically removes any inherited permissions, resets those permissions to the default, and turns off inheritance for those objects. The idea is to prevent possible elevation of privileges. This behavior is described in &lt;a href=&#34;http://support.microsoft.com/default.aspx?scid=kb;en-us;817433&#34;&gt;this KB article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The fix? Well, you can muck around in Active Directory and play with the adminSDHolder object, or you can just not worry about delegations on those user objects, or you can remove those user objects from the protected group in question. In my particular case, the user objects needed to be taken out of the protected group anyway, so that was a natural fit.&lt;/p&gt;

&lt;p&gt;Keep this in mind when planning AD delegations and the placement of accounts that will be members of a protected group.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Linux-AD Integration Wrap-Up</title>
          <link>http://lowescott.github.io/2005/07/22/linux-ad-integration-wrap-up/</link>
          <pubDate>Fri, 22 Jul 2005 00:19:08 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/07/22/linux-ad-integration-wrap-up/</guid>
          <description>&lt;p&gt;Well, my Linux-AD integration task is pretty much complete. I have three Linux servers authenticating via &lt;a href=&#34;http://web.mit.edu/kerberos/www&#34;&gt;Kerberos&lt;/a&gt; to Active Directory, and using LDAP for name/group resolution. Only one Linux server remains; I need to do some research on how &lt;a href=&#34;http://asg.web.cmu.edu/sasl/&#34;&gt;SASL&lt;/a&gt; with interact with PAM before I can switch over that particular server. My &lt;a href=&#34;http://www.openbsd.org&#34;&gt;OpenBSD&lt;/a&gt; server I&amp;rsquo;m going to leave alone for now; perhaps later I&amp;rsquo;ll get it integrated as well.&lt;/p&gt;

&lt;p&gt;Next, I think I&amp;rsquo;m going to see what is involved in using RADIUS to authenticate VPN tunnels on my hardware firewall.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Minor Linux-AD Hiccup Fixed (Hopefully)</title>
          <link>http://lowescott.github.io/2005/07/18/minor-linux-ad-hiccup-fixed-hopefully/</link>
          <pubDate>Mon, 18 Jul 2005 00:18:41 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/07/18/minor-linux-ad-hiccup-fixed-hopefully/</guid>
          <description>&lt;p&gt;I think I have resolved one minor Linux-AD integration hiccup. In setting up the Kerberos authentication, various instructions I had found (including some from Microsoft) indicated I needed to create a &lt;em&gt;user&lt;/em&gt; account for the Linux servers, then use &lt;code&gt;ktpass&lt;/code&gt; to generate the Kerberos keytab. This works, but being the stickler for detail that I am, I really wanted to use a computer account instead of a user account.&lt;/p&gt;

&lt;p&gt;After fiddling with it for a while, I finally managed to make it work. The &lt;code&gt;ktpass&lt;/code&gt; command should look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ktpass -princ host/fqdn@REALM -mapuser DOMAIN\name$  
-crypto DES-CBC-MD5 -pass password -ptype KRB5_NT_PRINCIPAL  
-out filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The missing piece, for me, was specifying &lt;code&gt;DOMAIN\name$&lt;/code&gt; for the mapuser parameter. Without it, the command kept generating an error.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t know for sure that this will work, but I will be testing this within the next day or so to see how it goes.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Linux-AD Integration Success!</title>
          <link>http://lowescott.github.io/2005/07/17/linux-ad-integration-success/</link>
          <pubDate>Sun, 17 Jul 2005 22:31:52 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/07/17/linux-ad-integration-success/</guid>
          <description>&lt;p&gt;Well, limited success, anyway. I have managed to get Linux authentication to occur via &lt;a href=&#34;http://web.mit.edu/kerberos/www&#34;&gt;Kerberos&lt;/a&gt; against Active Directory. LDAP is used to lookup the user and group information. Using pam_krb5, authentication occurs via Kerberos to an Active Directory DC for any PAM-aware application. I&amp;rsquo;m sure that I&amp;rsquo;ll find some hiccups along the way, but so far things look good. I only have 1 server configured this way for now (a non-essential server), but after some additional testing I&amp;rsquo;ll expand this to the remainder of my Linux servers.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll post more details here and/or on the &lt;a href=&#34;http://www.mercurionsystems.com/index.html&#34;&gt;Mercurion Systems&lt;/a&gt; web site once all the bugs have been worked out. My thanks go out to the many, many individuals who posted information on using Kerberos and LDAP with Active Directory; this would not have been possible without their assistance.&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>

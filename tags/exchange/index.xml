<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scott&#39;s Weblog </title>
    <link>http://lowescott.github.io/tags/exchange/index.xml/</link>
    <language>en-us</language>
    <author>Scott Lowe</author>
    <rights>(C) 2005</rights>
    <updated>2005-12-03 00:21:54 &#43;0000 &#43;0000</updated>

    
      
        <item>
          <title>Protecting OWA with Apache</title>
          <link>http://lowescott.github.io/2005/12/03/protecting-owa-with-apache/</link>
          <pubDate>Sat, 03 Dec 2005 00:21:54 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/12/03/protecting-owa-with-apache/</guid>
          <description>&lt;p&gt;Outlook Web Access (OWA) is the web-based interface for accessing e-mail and other resources handled by &lt;a href=&#34;http://www.microsoft.com/exchange/&#34;&gt;Microsoft Exchange&lt;/a&gt;. Unfortunately, OWA&amp;rsquo;s popularity also makes it the target of numerous worms and security exploits. As a result, many organizations seek to deploy OWA behind a reverse proxy that can help shield OWA from web-based attacks and exploits. In this posting, I&amp;rsquo;m going to share information to help build a reverse proxy using &lt;a href=&#34;http://www.apache.org/httpd/&#34;&gt;Apache 2.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a skeleton of an &lt;code&gt;httpd.conf&lt;/code&gt; file to support Apache as a reverse proxy in front of OWA:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NameVirtualHost 1.2.3.4:80  
NameVirtualHost 1.2.3.4:443  
ProxyRequests Off

&amp;lt;VirtualHost 1.2.3.4:443&amp;gt;  
ServerAdmin webmaster@domain.com  
ServerName webmail.domain.com  
DocumentRoot /var/www/webmail  
RequestHeader set Front-End-Https &amp;quot;On&amp;quot;  
ProxyRequests Off  
ProxyPreserveHost On  

SSLEngine On  
SSLCertificateFile conf/webmail-ssl-cert.pem

&amp;lt;Location /exchange&amp;gt;  
ProxyPass http://mail.domain.com/exchange  
ProxyPassReverse http://mail.domain.com/exchange  
SSLRequireSSL  
&amp;lt;/Location&amp;gt;

&amp;lt;Location /exchweb&amp;gt;  
ProxyPass http://mail.domain.com/exchweb  
ProxyPassReverse http://mail.domain.com/exchweb  
SSLRequireSSL  
&amp;lt;/Location&amp;gt;

&amp;lt;Location /public&amp;gt;  
ProxyPass http://mail.domain.com/public  
ProxyPassReverse http://mail.domain.com/public  
SSLRequireSSL  
&amp;lt;/Location&amp;gt;

&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The key portions of this configuration are described below, along with some supporting information.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;NameVirtualHost:&lt;/em&gt; The NameVirtualHost directive enables Apache to use name-based virtual hosts on the specified IP addresses and ports. The parameter to the NameVirtualHost directive must match one of the VirtualHost definitions, as shown in the sample configuration, or else the content will be served from the default virtual host (the first virtual host listed in the configuration). Note that if the Apache reverse proxy will not be using name-based virtual hosts (instead using IP address-based virtual hosts or running only a single server instance), then this directive is not required.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;RequestHeader:&lt;/em&gt; This directive instructs Apache to add a header &amp;ldquo;Front-End-Https: On&amp;rdquo; to requests sent to the internal OWA server. This header is proprietary to OWA and forces OWA to build URLs using &amp;ldquo;https://&amp;rdquo; references instead of ordinary &amp;ldquo;http://&amp;rdquo; references. This directive is required in order to terminate the SSL tunnel at the reverse proxy and use clear-text HTTP between the reverse proxy and the internal OWA server. This directive requires the &lt;code&gt;mod_headers&lt;/code&gt; module.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;ProxyPreserveHost:&lt;/em&gt; This directive configures Apache to pass the original host header, supplied by the client, to the server to which the request is being proxied. (This is instead of the host name supplied in the ProxyPass directive.) Again, this facilitates the construction of URLs with the correct hostname when accessing resources inside OWA.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;SSLCertificateFile:&lt;/em&gt; Apache expects the web server&amp;rsquo;s SSL certificate to be in PEM format. If the certificate&amp;rsquo;s key is encrypted, Apache will prompt upon startup for the passphrase to the key (this prevents any form of automated startup). It is considered a security best practice to keep the key in a separate file (using the SSLCertificateKeyFile directive) in encrypted form and supply the password upon the startup of Apache.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this configuration in place, the following benefits are realized:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Name-based virtual hosts are supported. This allows other URLs to also be proxied through this same reverse proxy server.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SSL encryption is offloaded from the Exchange server to the reverse proxy server. Traffic from the reverse proxy server itself to the Exchange server is standard, unencrypted HTTP.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When used in conjunction with &lt;a href=&#34;http://www.modsecurity.org/&#34;&gt;mod_security&lt;/a&gt; (another Apache module), OWA is protected against a very significant majority of all web-based attacks.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Using Apache to serve as a reverse proxy for OWA is a cost-effective way to add another layer of security to an Exchange-based messaging infrastructure.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Current Tech Projects</title>
          <link>http://lowescott.github.io/2005/11/06/current-tech-projects/</link>
          <pubDate>Sun, 06 Nov 2005 14:19:15 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/11/06/current-tech-projects/</guid>
          <description>&lt;p&gt;Every now and then, I like to post out here a list of my current &amp;ldquo;tech projects.&amp;rdquo; These are the things that I&amp;rsquo;m working on for my own network, things that I may or may not start recommending to or supporting for customers.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s my current list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;InterNetNews (INN): I had an installation of INN up and running a short while back, but had to resort to an ugly hack with stunnel in order to make SSL work from a newsreader. To get a clean build, I&amp;rsquo;ve decided I&amp;rsquo;ll just start from scratch with a clean installation. I&amp;rsquo;ll be using &lt;a href=&#34;http://www.centos.org/&#34;&gt;CentOS&lt;/a&gt; 4.1 again as I work on transitioning all my Linux-based servers to a newer Linux distribution, and I&amp;rsquo;ll be compiling INN from source instead of using a package.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.openbsd.org/&#34;&gt;OpenBSD&lt;/a&gt;-based antispam gateway: I&amp;rsquo;ve got an antispam gateway running right now (uses Red Hat Linux, &lt;a href=&#34;http://www.postfix.org/&#34;&gt;Postfix&lt;/a&gt; 2.1, SpamAssassin, Postgrey, Razor, DCC, and ClamAV), but I want to try building one using OpenBSD 3.8 (just recently released) and newer builds of Postfix, SpamAssassin, and Amavisd-New. In particular, I&amp;rsquo;m interested in the advanced integration of newer versions of Postfix and Amavisd-New.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;XC Connect: I&amp;rsquo;ve also mentioned XC Connect before as well, but a previous installation proved to be unstable, and the Apache integration was less than stellar. In fact, the integration was nonexistent. I&amp;rsquo;m going to try a clean build of CentOS 4.1 and XC Connect to see if that will correct the stability and integration problems.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also need to wrap up the documentation for a few completed items, such as the Cisco VPN integration with Active Directory. Mac OS X integration with Active Directory is also on the &amp;ldquo;to do&amp;rdquo; list, but it will have to wait a little while&amp;mdash;I&amp;rsquo;ll need to find another Mac to &amp;ldquo;experiment&amp;rdquo; with instead of using my own PowerBook.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Error ID c10308a2 is Put to Rest</title>
          <link>http://lowescott.github.io/2005/09/26/error-id-c10308a2-is-put-to-rest/</link>
          <pubDate>Mon, 26 Sep 2005 13:45:18 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/09/26/error-id-c10308a2-is-put-to-rest/</guid>
          <description>&lt;p&gt;As you may already know, I&amp;rsquo;ve been struggling with a bug in an environment running Exchange Server 2003 and Windows Server 2003 with SP1. The bug is manifested as an error that appears when users with the properly delegated permissions attempt to add or modify an e-mail address on an already mail-enabled or mailbox-enabled object. The error, listed as error ID c10308a2, contains text along the lines of being unable to determine if the Microsoft Exchange System Attendant service is running.&lt;/p&gt;

&lt;p&gt;The underlying issue is a change that Windows Server 2003 SP1 makes to the security descriptors applied to the Service Control Manager. This change in security descriptors now makes it impossible for non-administrators to query service status; hence, the error message.&lt;/p&gt;

&lt;p&gt;In trying to apply the fix suggested by Microsoft in KB905809 (the use of the SC.EXE command), the error was never resolved. It turns out that the workstation I was using the test environment was configured not to use the primary DNS suffix, but instead use a predetermined DNS suffix search list. This configuration resulted in the system&amp;rsquo;s AD domain name &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; being in the suffix search list. As a result, even though the fix from Microsoft was applied, errors still occurred.&lt;/p&gt;

&lt;p&gt;This morning I double-checked everything on the test servers as well as the test workstations, corrected the problem described above, and reset the environment to match the production environment. Then, walking through the tests again, I confirmed that running the SC command to add permissions to the Authenticated Users group (see the KB article linked above for more details, then see &lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthz/security/security_descriptor_string_format.asp&#34;&gt;this explanation&lt;/a&gt; of SDDL syntax) &lt;strong&gt;&lt;em&gt;does&lt;/em&gt;&lt;/strong&gt; indeed resolve the issue.&lt;/p&gt;

&lt;p&gt;So, finally, we can put this issue to rest. If you are running Exchange Server 2003 with Windows Server 2003 SP1 and finding that your non-administrative users can&amp;rsquo;t add or modify e-mail addresses using Active Directory Users &amp;amp; Computers, see KB905809 and run the SC command listed in there.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Have You Seen Error ID c10308a2?</title>
          <link>http://lowescott.github.io/2005/09/22/have-you-seen-error-id-c10308a2/</link>
          <pubDate>Thu, 22 Sep 2005 17:52:13 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/09/22/have-you-seen-error-id-c10308a2/</guid>
          <description>&lt;p&gt;As the next-to-last article in a series of postings about the problem described in this &lt;a href=&#34;http://support.microsoft.com/default.aspx?scid=kb;en-us;905809&#34;&gt;KB article&lt;/a&gt;, it appears that Microsoft will not be producing a hotfix for this bug. In speaking with Microsoft earlier today, it appears that no hotfix will be produced for this, even though it is a confirmed bug. As of this afternoon, the only known fix for the problem is using &lt;strong&gt;both&lt;/strong&gt; methods outlined in the KB article. I hope to confirm that for sure on Monday.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m also going to confirm on Monday whether membership in the local Administrators group (on the actual Exchange servers) will also fix the issue.&lt;/p&gt;

&lt;p&gt;The next posting about this problem will be the last one regarding this issue. Really.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Badmail and Exchange 2003</title>
          <link>http://lowescott.github.io/2005/07/16/badmail-and-exchange-2003/</link>
          <pubDate>Sat, 16 Jul 2005 21:34:22 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/07/16/badmail-and-exchange-2003/</guid>
          <description>&lt;p&gt;If you are planning an in-place upgrade of your server running Exchange 2000 to Exchange Server 2003, beware of the Badmail folder. Apparently, during the Exchange Server 2003 setup process, the setup application tries to go back and stamp ACLs (access control lists) on all the objects in the installation directory. This, by default, includes the Badmail directory. If your Badmail directory contains lots of items (which, in an Exchange 2000 installation, it probably does), then this can cause the Setup process to appear to be hung. Microsoft has published &lt;a href=&#34;http://support.microsoft.com/default.aspx?scid=kb;en-us;822578&#34;&gt;this KB article&lt;/a&gt; discussing the issue and the resolution.&lt;/p&gt;

&lt;p&gt;Fortunately, in Exchange Server 2003 SP1, Microsoft has changed the behavior of Exchange to use the Badmail folder only if explicitly configured to do so (see &lt;a href=&#34;http://support.microsoft.com/default.aspx?scid=kb;en-us;884068&#34;&gt;this KB article&lt;/a&gt;). No more monitoring the Badmail folder!&lt;/p&gt;

&lt;p&gt;In addition, for those networks that have not yet deployed Exchange Server 2003 SP1, Microsoft has released the &lt;a href=&#34;http://support.microsoft.com/default.aspx?scid=kb;en-us;867642&#34;&gt;BadMailAdmin tool&lt;/a&gt;. I&amp;rsquo;ve tested this, and it works as advertised.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Perdition Working Now</title>
          <link>http://lowescott.github.io/2005/05/15/perdition-working-now/</link>
          <pubDate>Sun, 15 May 2005 16:31:02 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/05/15/perdition-working-now/</guid>
          <description>&lt;p&gt;I finally managed to get &lt;a href=&#34;http://www.vergenet.net/linux/perdition/&#34;&gt;Perdition&lt;/a&gt; working. Still unable to confirm if &lt;a href=&#34;http://www.apple.com/macosx/&#34;&gt;Mac OS X&amp;rsquo;s&lt;/a&gt; Mail.app supports STARTTLS (my experience thus far says No), I had to resort to using &lt;a href=&#34;http://stunnel.mirt.net/index.html&#34;&gt;Stunnel&lt;/a&gt; to wrap IMAP inside an SSL tunnel, then forward the IMAP traffic to Perdition on the same host. The Perdition proxy then passes the traffic to the back-end mail server. It&amp;rsquo;s not the solution that I really wanted, but it will do for now. At least the &lt;a href=&#34;http://www.microsoft.com/exchange/&#34;&gt;Exchange Server 2003&lt;/a&gt; IMAP server isn&amp;rsquo;t exposed directly to external networks.&lt;/p&gt;

&lt;p&gt;On a slightly related note, the &lt;a href=&#34;http://www.slipstick.com/&#34;&gt;Slipstick Systems&lt;/a&gt; web site has a link to an IMAP proxy server that implements STARTTLS as a workaround for Exchange&amp;rsquo;s lack of native support for STARTTLS. The IMAP proxy can be found at &lt;a href=&#34;http://www.slipstick.com/files/imapproxysvc.zip&#34;&gt;http://www.slipstick.com/files/imapproxysvc.zip&lt;/a&gt;. So, if you have an IMAP4 client that supports STARTTLS and want to connect it to Exchange, you can use this IMAP proxy. At least, until &lt;a href=&#34;http://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt; puts STARTTLS support into Exchange directly.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Nonstandard Implementations</title>
          <link>http://lowescott.github.io/2005/05/14/nonstandard-implementations/</link>
          <pubDate>Sat, 14 May 2005 22:24:04 &#43;0000</pubDate>
          <author>Scott Lowe</author>
          <guid>http://lowescott.github.io/2005/05/14/nonstandard-implementations/</guid>
          <description>&lt;p&gt;In my experiments with &lt;a href=&#34;http://www.vergenet.net/linux/perdition/&#34;&gt;Perdition&lt;/a&gt;, I learned a couple of very interesting facts. First, the IMAP4 implementation on &lt;a href=&#34;http://www.microsoft.com/exchange/&#34;&gt;Exchange Server 2003&lt;/a&gt; does not support the STARTTLS command, as described in &lt;a href=&#34;http://www.networksorcery.com/enp/rfc/rfc2595.txt&#34;&gt;RFC 2595&lt;/a&gt; and re-affirmed in &lt;a href=&#34;http://www.networksorcery.com/enp/rfc/rfc3501.txt&#34;&gt;RFC 3501&lt;/a&gt;. Instead, Exchange expects an SSL session to be established immediately, and then IMAP is spoken. This is similar to the &amp;ldquo;smtpd_tls_wrappermode&amp;rdquo; directive that &lt;a href=&#34;http://www.postfix.org/&#34;&gt;Postfix&lt;/a&gt; supports.&lt;/p&gt;

&lt;p&gt;Second, it appears that the &lt;a href=&#34;http://www.apple.com/macosx/&#34;&gt;Mac OS X&lt;/a&gt; Mail application (commonly referred to as Mail.app) also uses this IMAP-over-SSL approach, since I&amp;rsquo;ve been using Mail.app to connect to Exchange using IMAP with SSL for quite some time. I&amp;rsquo;m trying to confirm that now, but having precious little luck finding any definitive information one way or the other. If anyone knows for certain, please let me know. I&amp;rsquo;m going to keep searching.&lt;/p&gt;

&lt;p&gt;This is one of those things that just makes me crazy.&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
